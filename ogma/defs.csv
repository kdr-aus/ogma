name,category,input,location,line,code
!=,cmp,,<ogma>,,!= (rhs) { eq $rhs | not }
<,cmp,,<ogma>,,< (rhs) { cmp $rhs | = Ord::Lt }
<=,cmp,,<ogma>,,<= (rhs) { cmp $rhs | or { = Ord::Lt } { = Ord::Eq } }
=,cmp,,<ogma>,,Err:509
>,cmp,,<ogma>,,> (rhs) { cmp $rhs | = Ord::Gt }
>=,cmp,,<ogma>,,>= (rhs) { cmp $rhs | or { = Ord::Gt } { = Ord::Eq } }
cmp,cmp,,<ogma>,,
eq,cmp,,<ogma>,,
max,cmp,,<ogma>,,
min,cmp,,<ogma>,,
Ord::Eq,init,,<ogma>,,
Ord::Gt,init,,<ogma>,,
Ord::Lt,init,,<ogma>,,
ls,io,,<ogma>,,
open,io,,<ogma>,,
save,io,,<ogma>,,
and,logic,,<ogma>,,
if,logic,,<ogma>,,
not,logic,,<ogma>,,
or,logic,,<ogma>,,
append,morphism,,<ogma>,,
append-row,morphism,,<ogma>,,
dedup,morphism,,<ogma>,,
filter,morphism,,<ogma>,,
fold,morphism,,<ogma>,,
fold-while,morphism,,<ogma>,,
grp,morphism,,<ogma>,,
grp-by,morphism,,<ogma>,,
map,morphism,,<ogma>,,
pick,morphism,,<ogma>,,
ren,morphism,,<ogma>,,
ren-with,morphism,,<ogma>,,
rev,morphism,,<ogma>,,
skip,morphism,,<ogma>,,
skip-hdrs,morphism,Table,<ogma>,,skip-hdrs Table (num:Num) { ren-with $num #i | skip $num }
sort,morphism,,<ogma>,,
sort-by,morphism,,<ogma>,,
take,morphism,,<ogma>,,
.,pipeline,,<ogma>,,
Table,pipeline,,<ogma>,,
Tuple,pipeline,,<ogma>,,
\,pipeline,,<ogma>,,
benchmark,pipeline,,<ogma>,,
empty,pipeline,,<ogma>,,empty () { len | = 0 }
get,pipeline,,<ogma>,,
last,pipeline,String,<ogma>,,last Str () { nth {len | - 1} }
last,pipeline,Table,<ogma>,,last Table (expr:Expr) { nth {len | - 1} $expr }
len,pipeline,,<ogma>,,
let,pipeline,,<ogma>,,
nth,pipeline,,<ogma>,,
rand,pipeline,,<ogma>,,
range,pipeline,,<ogma>,,
to-str,pipeline,,<ogma>,,
